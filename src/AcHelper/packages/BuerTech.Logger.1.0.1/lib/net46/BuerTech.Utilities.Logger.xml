<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuerTech.Utilities.Logger</name>
    </assembly>
    <members>
        <member name="T:BuerTech.Utilities.Logger.CallerInformation">
            <summary>
            A wrapper for <see cref="T:System.Diagnostics.StackFrame"/>StackFrame
            So it can be used as a model for MVVM.
            </summary>
        </member>
        <member name="M:BuerTech.Utilities.Logger.CallerInformation.#ctor(System.Diagnostics.StackFrame)">
            <summary>
            Initializes an instance of CallerInformation.
            </summary>
            <param name="stackframe"></param>
        </member>
        <member name="P:BuerTech.Utilities.Logger.CallerInformation.FileLocation">
            <summary>
            Root directory to save logfiles.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.CallerInformation.ClassName">
            <summary>
            Name of the calling class.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.CallerInformation.MethodName">
            <summary>
            Name of the calling Method.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.CallerInformation.LineNumber">
            <summary>
            Line number where Log is created.
            </summary>
        </member>
        <member name="T:BuerTech.Utilities.Logger.Constants">
            <summary>
            Public constants
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.Constants.STRING_LOGEXTENSION">
            <summary>
            extension of a log file.
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.Constants.STRING_JSONEXTENSION">
            <summary>
            extension of a json file.
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.Constants.STRING_DEBUGPREFIX">
            <summary>
            Prefix for a log file created while debugging.
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.Constants.STRING_DEBUGDOCUMENT">
            <summary>
            Name of Document for Debug logs.
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.Constants.STRING_LOGSDOCUMENT">
            <summary>
            Name of Document for regular logs.
            </summary>
        </member>
        <member name="T:BuerTech.Utilities.Logger.Extensions">
            <summary>
            Extensions for Exceptions for easy handling.
            </summary>
        </member>
        <member name="M:BuerTech.Utilities.Logger.Extensions.ToLog(System.Exception,BuerTech.Utilities.Logger.LogPrior,System.Diagnostics.StackTrace,System.Boolean)">
            <summary>
            Creates and returns a <see cref="T:BuerTech.Utilities.Logger.Log"/>Log instance
            from an Exception.
            </summary>
            <param name="exception">Thrown exception.</param>
            <param name="prior">Priority status</param>
            <param name="stacktrace"></param>
            <param name="inner">true if you want to include innerexceptions.</param>
            <returns>Log instance based on the properties of the thrown exception.</returns>
        </member>
        <member name="M:BuerTech.Utilities.Logger.Extensions.ToString(System.Exception,System.Boolean)">
            <summary>
            Displays the exception's message.
            if inner equals true then also all messages from innerexceptions are displayed.
            </summary>
            <param name="ex"></param>
            <param name="inner"></param>
            <returns></returns>
        </member>
        <member name="M:BuerTech.Utilities.Logger.Extensions.ShowDialog(System.Exception,System.Boolean)">
            <summary>
            Displays the exception's message in a dialog.
            </summary>
            <param name="ex"></param>
            <param name="inner"></param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.Extensions.InnerExceptionsToString(System.Exception)">
            <summary>
            Displays only the messages from the innerexceptions.
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:BuerTech.Utilities.Logger.ILogWriter">
            <summary>
            LogWriter interface.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.ILogWriter.Setup">
            <summary>
            Setup for the LogWriter.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.ILogWriter.LogQueue">
            <summary>
            Queue where the <see cref="T:BuerTech.Utilities.Logger.Log"/>Log instances are queued.
            </summary>
        </member>
        <member name="M:BuerTech.Utilities.Logger.ILogWriter.WriteToLog(System.String,BuerTech.Utilities.Logger.LogPrior)">
            <summary>
            Write message to log.
            </summary>
            <param name="message">Message to log.</param>
            <param name="priority">Priority status.</param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.ILogWriter.WriteToLog(System.Exception,BuerTech.Utilities.Logger.LogPrior)">
            <summary>
            Writes an exception to a log.
            </summary>
            <param name="exception">Thrown exception</param>
            <param name="priority">Priority status</param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.ILogWriter.Debug(System.String)">
            <summary>
            Writes message to a separate debug log.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.ILogWriter.CanFlush">
            <summary>
            Determines whether to flush already.
            </summary>
            <returns>true if can flush.</returns>
        </member>
        <member name="M:BuerTech.Utilities.Logger.ILogWriter.Flush">
            <summary>
            Flushes the queued logs.
            </summary>
        </member>
        <member name="T:BuerTech.Utilities.Logger.Log">
            <summary>
            Stores data to log.
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.LogSetup.MaxAgePropertyName">
            <summary>
            The <see cref="P:BuerTech.Utilities.Logger.LogSetup.MaxAge" /> property's name.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.LogSetup.MaxAge">
            <summary>
            Sets and gets the MaxAge property.
            Changes to that property's value raise the PropertyChanged event. 
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.LogSetup.MaxQueueSizePropertyName">
            <summary>
            The <see cref="P:BuerTech.Utilities.Logger.LogSetup.MaxQueueSize" /> property's name.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.LogSetup.MaxQueueSize">
            <summary>
            Sets and gets the MaxQueueSize property.
            Changes to that property's value raise the PropertyChanged event. 
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.LogSetup.SaveLocationPropertyName">
            <summary>
            The <see cref="P:BuerTech.Utilities.Logger.LogSetup.SaveLocation" /> property's name.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.LogSetup.SaveLocation">
            <summary>
            Sets and gets the SaveLocation property.
            Changes to that property's value raise the PropertyChanged event. 
            </summary>
        </member>
        <member name="F:BuerTech.Utilities.Logger.LogSetup.ApplicationNamePropertyName">
            <summary>
            The <see cref="P:BuerTech.Utilities.Logger.LogSetup.ApplicationName" /> property's name.
            </summary>
        </member>
        <member name="P:BuerTech.Utilities.Logger.LogSetup.ApplicationName">
            <summary>
            Sets and gets the ApplicationName property.
            Changes to that property's value raise the PropertyChanged event. 
            </summary>
        </member>
        <member name="T:BuerTech.Utilities.Logger.LogWriter">
            <summary>
            Core of the utility, handles the Logging.
            </summary>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.Debug(System.String)">
            <summary>
            Creates a Debug log
            and queues the log in a seperate Debug Queue.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.WriteToLog(System.Exception,BuerTech.Utilities.Logger.LogPrior)">
            <summary>
            Creates a Log from the exception
            and queues the log.
            </summary>
            <param name="exception"></param>
            <param name="priority"></param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.WriteToLog(System.String,BuerTech.Utilities.Logger.LogPrior)">
            <summary>
            Creates a log with the given message
            and queues the log.
            </summary>
            <param name="message"></param>
            <param name="priority"></param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.CanFlush">
            <summary>
            Checks if the conditions are right to flush the logs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.Flush">
            <summary>
            Writes everything into the logfile
            and clears the queue.
            </summary>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.QueueLog(BuerTech.Utilities.Logger.Log)">
            <summary>
            Queues the Log entry
            and checks whether to flush already or not.
            </summary>
            <param name="logEntry"><see cref="T:BuerTech.Utilities.Logger.Log"/>Log to queue.</param>
        </member>
        <member name="M:BuerTech.Utilities.Logger.LogWriter.LogsAreAged">
            <summary>
            Checks the age of the buffered logs.
            </summary>
            <returns>true if the maximum age has been expired.</returns>
        </member>
        <member name="M:BuerTech.Utilities.Logger.Utils.GetCallerInformation(System.Diagnostics.StackTrace)">
            <summary>
            Gets the Caller Method from a StackTrace
            </summary>
            <param name="stacktrace"></param>
            <returns>String array: string[0]=&lt;Method &amp; string[1]=&lt;Declaring Type (class)</returns>
        </member>
    </members>
</doc>
